name: Test AWS deployment  

# on:
  # workflow_dispatch:

# jobs:
  # build:
    # #runs-on: [self-hosted]
    # runs-on: ubuntu-latest
    # name: Run Deployment
    
    # steps:
      # - uses: actions/checkout@v3
        # with:
          # fetch-depth: 0
      # - name: Run Tests
        # run: ./scripts/deploy.sh  
#on:
 # push:
  #  branches: [ "main" ]
on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1                   # set this to your preferred AWS region, e.g. us-west-1
  #ECR_REPOSITORY: test_ecr_repo           # set this to your Amazon ECR repository name
  #ECS_SERVICE: test_ecs_service                 # set this to your Amazon ECS service name
  #ECS_CLUSTER: test_ecs_cluster                 # set this to your Amazon ECS cluster name
  #ECS_TASK_DEFINITION: task-definition.json # set this to the path to your Amazon ECS task definition
                                               # file, e.g. .aws/task-definition.json
  #CONTAINER_NAME: Test_CONTAINER_NAME           # set this to the name of the container in the
                                               # containerDefinitions section of your task definition

#permissions:
  #contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    #runs-on: [self-hosted, Linux, cloud-sandbox]
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    ################################
    # Run Linter against code base #
    ################################
    #- name: Lint Code Base
      #uses: github/super-linter@v4
      #env:
        #VALIDATE_ALL_CODEBASE: false
        #DEFAULT_BRANCH: main
        #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
        aws-region: ${{ env.AWS_REGION }}